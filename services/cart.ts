// services/cart.ts
import { axiosInstance } from "@/services/axiosInstance";
import { ApiRoutes } from "@/services/constants";
import { CartWithItemsType, CartItemWithImagesType } from "@/types/cart";

// –ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
export async function getCart(): Promise<CartWithItemsType | null> {
    const { data } = await axiosInstance.get<CartWithItemsType | null>(
        ApiRoutes.CART_API,
        { withCredentials: true } // üëà –≤–∞–∂–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ cookie
    );
    return data;
}

// –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
export async function addItemToCart({
                                        productId,
                                        quantity,
                                    }: {
    productId: number;
    quantity: number;
}): Promise<CartItemWithImagesType> {
    const { data } = await axiosInstance.post<CartItemWithImagesType>(
        ApiRoutes.CART_API,
        { productId, quantity },
        { withCredentials: true } // üëà cookie —É–π–¥—É—Ç –≤–º–µ—Å—Ç–µ
    );
    return data;
}

// –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
export async function updateItemQuantity({
                                             cartItemId,
                                             action,
                                         }: {
    cartItemId: number;
    action: "increment" | "decrement";
}): Promise<CartItemWithImagesType | { success: boolean; deleted: boolean }> {
    const { data } = await axiosInstance.patch<
        CartItemWithImagesType | { success: boolean; deleted: boolean }
    >(
        ApiRoutes.CART_API,
        { cartItemId, action },
        { withCredentials: true }
    );
    return data;
}